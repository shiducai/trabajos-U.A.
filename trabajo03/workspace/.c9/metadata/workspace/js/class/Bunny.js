{"changed":false,"filter":false,"title":"Bunny.js","tooltip":"/js/class/Bunny.js","value":"function Bunny (x, y) {\n    LEFT = 0;\n    RIGHT = 1;\n    TOP = 2;\n    DOWN = 3;\n    this.x = x;\n    this.y = y;\n    this.size = 50;\n    this.img = new Image();\n    this.img.src = \"img/rabbit.png\"\n    this.direction = RIGHT;\n    this.actionStart = -5;\n    this.actions = new Array();\n    this.currentAction = undefined;\n    \n    this.doAction = function() {\n        if (this.actions.length > 0 && this.actionStart == -5) {\n            for (var i = 0; i < scene.tiles.length; i++) {\n                var tile = scene.tiles[i];\n                var collision = squareCollision(this.x, this.y+10, this.size, this.size, tile.x+5, tile.y+5, tile.width-10, tile.height-10);\n                if (collision && tile instanceof YellowSquare) {\n                    scene.switch(i);\n                }\n            }\n            this.currentAction = this.actions[0];\n            this.actions.splice(0,1);\n            switch(this.currentAction) {\n                case ADVANCE:\n                    this.actionStart = 3;\n                    break;\n                case TURN_LEFT:\n                case TURN_RIGHT:\n                    this.actionStart = 1;\n                    this.calculateDirection();\n                    break;\n                default:\n                    // Nothing to do\n                    break;\n            }\n        }\n    }\n    \n    this.calculatePosX = function() {\n        switch (this.direction) {\n            case RIGHT:\n                return this.x + this.size/3\n                break;\n            case LEFT:\n                return this.x - this.size/3\n                break;\n            case TOP:\n            case DOWN:\n                return this.x\n                break;\n        }\n    }\n    \n    this.calculatePosY = function() {\n        switch (this.direction) {\n            case LEFT:\n            case RIGHT:\n                return this.y;\n                break;\n            case TOP:\n                return this.y - this.size/3;\n                break;\n            case DOWN:\n                return this.y + this.size/3;\n                break;\n        }\n    }\n    \n    this.calculateDirection = function () {\n        switch (this.direction) {\n            case LEFT:\n                if (this.currentAction == TURN_LEFT) {\n                    this.direction = DOWN;\n                } else {\n                    this.direction = TOP;\n                }\n                break;\n            case RIGHT:\n                if (this.currentAction == TURN_LEFT) {\n                    this.direction = TOP;\n                } else {\n                    this.direction = DOWN;\n                }\n                break;\n            case TOP:\n                if (this.currentAction == TURN_LEFT) {\n                    this.direction = LEFT;\n                } else {\n                    this.direction = RIGHT;\n                }\n                break;\n            case DOWN:\n                if (this.currentAction == TURN_LEFT) {\n                    this.direction = RIGHT;\n                } else {\n                    this.direction = LEFT;\n                }\n                break;\n        }\n    }\n    \n    this.draw = function() {\n        if (this.actionStart > 0) {\n            switch (this.currentAction) {\n                case ADVANCE:\n                    this.x = this.calculatePosX();\n                    this.y = this.calculatePosY();\n                    if (this.actionStart == 3) {\n                        switch (this.direction) {\n                            case LEFT:\n                                RABBIT_CTX.drawImage(this.img, 0, 32, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case RIGHT:\n                                RABBIT_CTX.drawImage(this.img, 0, 64, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case TOP:\n                                RABBIT_CTX.drawImage(this.img, 0, 96, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case DOWN:\n                                RABBIT_CTX.drawImage(this.img, 0, 0, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                        }\n                    } else if (this.actionStart == 2) {\n                        switch (this.direction) {\n                            case LEFT:\n                                RABBIT_CTX.drawImage(this.img, 64, 32, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case RIGHT:\n                                RABBIT_CTX.drawImage(this.img, 64, 64, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case TOP:\n                                RABBIT_CTX.drawImage(this.img, 64, 96, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case DOWN:\n                                RABBIT_CTX.drawImage(this.img, 64, 0, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                        }\n                    } else if (this.actionStart == 1) {\n                        switch (this.direction) {\n                            case LEFT:\n                                RABBIT_CTX.drawImage(this.img, 32, 32, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case RIGHT:\n                                RABBIT_CTX.drawImage(this.img, 32, 64, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case TOP:\n                                RABBIT_CTX.drawImage(this.img, 32, 96, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                            case DOWN:\n                                RABBIT_CTX.drawImage(this.img, 32, 0, 32, 32,this.x, this.y, this.size, this.size);\n                                break;\n                        }\n                    }\n                    break;\n                case TURN_LEFT:\n                case TURN_RIGHT:\n                    switch (this.direction) {\n                        case LEFT:\n                            RABBIT_CTX.drawImage(this.img, 32, 32, 32, 32,this.x, this.y, this.size, this.size);\n                            break;\n                        case RIGHT:\n                            RABBIT_CTX.drawImage(this.img, 32, 64, 32, 32,this.x, this.y, this.size, this.size);\n                            break;\n                        case TOP:\n                            RABBIT_CTX.drawImage(this.img, 32, 96, 32, 32,this.x, this.y, this.size, this.size);\n                            break;\n                        case DOWN:\n                            RABBIT_CTX.drawImage(this.img, 32, 0, 32, 32,this.x, this.y, this.size, this.size);\n                            break;\n                    }\n                    break;\n            }\n            this.actionStart--;\n            if(this.actionStart == 0) {\n                this.currentAction = undefined;\n            }\n        } else {\n            switch (this.direction) {\n                case LEFT:\n                    RABBIT_CTX.drawImage(this.img, 32, 32, 32, 32,this.x, this.y, this.size, this.size);\n                    break;\n                case RIGHT:\n                    RABBIT_CTX.drawImage(this.img, 32, 64, 32, 32,this.x, this.y, this.size, this.size);\n                    break;\n                case TOP:\n                    RABBIT_CTX.drawImage(this.img, 32, 96, 32, 32,this.x, this.y, this.size, this.size);\n                    break;\n                case DOWN:\n                    RABBIT_CTX.drawImage(this.img, 32, 0, 32, 32,this.x, this.y, this.size, this.size);\n                    break;\n            }\n            if (this.actionStart > -5) {\n                this.actionStart--;\n                if (this.actionStart == -5) {\n                    var outOfBounds = true;\n                    for (var i = 0; i < scene.tiles.length; i++) {\n                        var tile = scene.tiles[i];\n                        var collision = squareCollision(this.x, this.y+10, this.size, this.size, tile.x+5, tile.y+5, tile.width-10, tile.height-10);\n                        if (collision) {\n                            outOfBounds = false;\n                            if (tile instanceof YellowSquare) {\n                                scene.switch(i);\n                            } else if (tile instanceof RedSquare) {\n                                endReached = true;\n                            }\n                        }\n                    }\n                    if (outOfBounds) {\n                        resetScene();\n                    }\n                }\n            }\n        } \n    }\n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":2580,"scrollleft":0,"selection":{"start":{"row":216,"column":10},"end":{"row":216,"column":10},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":171,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1544480154333}